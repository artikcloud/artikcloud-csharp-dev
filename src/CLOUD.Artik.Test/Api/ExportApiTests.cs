/* 
 * ARTIK Cloud API
 *
 * No descripton provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using CLOUD.Artik.Client;
using CLOUD.Artik.Api;
using CLOUD.Artik.Model;

namespace CLOUD.Artik.Test
{
    /// <summary>
    ///  Class for testing ExportApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class ExportApiTests
    {
        private ExportApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new ExportApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of ExportApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' ExportApi
            //Assert.IsInstanceOfType(typeof(ExportApi), instance, "instance is a ExportApi");
        }

        
        /// <summary>
        /// Test ExportRequest
        /// </summary>
        [Test]
        public void ExportRequestTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ExportRequestInfo exportRequestInfo = null;
            //var response = instance.ExportRequest(exportRequestInfo);
            //Assert.IsInstanceOf<ExportRequestResponse> (response, "response is ExportRequestResponse");
        }
        
        /// <summary>
        /// Test GetExportHistory
        /// </summary>
        [Test]
        public void GetExportHistoryTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string trialId = null;
            //int? count = null;
            //int? offset = null;
            //var response = instance.GetExportHistory(trialId, count, offset);
            //Assert.IsInstanceOf<ExportHistoryResponse> (response, "response is ExportHistoryResponse");
        }
        
        /// <summary>
        /// Test GetExportResult
        /// </summary>
        [Test]
        public void GetExportResultTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string exportId = null;
            //var response = instance.GetExportResult(exportId);
            //Assert.IsInstanceOf<string> (response, "response is string");
        }
        
        /// <summary>
        /// Test GetExportStatus
        /// </summary>
        [Test]
        public void GetExportStatusTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string exportId = null;
            //var response = instance.GetExportStatus(exportId);
            //Assert.IsInstanceOf<ExportStatusResponse> (response, "response is ExportStatusResponse");
        }
        
    }

}
